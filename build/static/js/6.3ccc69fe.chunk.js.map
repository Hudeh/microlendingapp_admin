{"version":3,"sources":["components/containers/dashboard/views/dashboard/projects/CreateProjectForm.js"],"names":["withRouter","reduxForm","form","mime","handleSubmit","submitting","pristine","history","dispatch","useDispatch","renderInput","input","type","meta","name","accept","onChange","event","handleChange","invalid","error","style","color","fontSize","preventDefault","imageFile","target","files","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","width","naturalWidth","height","naturalHeight","revokeObjectURL","src","onSubmit","formValues","a","formData","FormData","append","project_name","project_endAt","project_description","project_cash_amount","project_img","config","headers","Authorization","localStorage","getItem","Accept","setLoading","axiosInstance","post","actionTypes","payload","stopSubmit","reset","offLoading","response","message","useState","activeStep","setActiveStep","steps","getPersonalInformation","className","placeholder","component","getTrack","getItems","handleBack","prevActiveStep","alternativeLabel","map","label","index","length","stepIndex","getStepContent","disabled","onClick","push","variant","setTimeout"],"mappings":"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","file":"static/js/6.3ccc69fe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Field, reduxForm, stopSubmit, reset } from \"redux-form\";\r\nimport axiosInstance from \"util/api\";\r\nimport { setLoading, offLoading } from \"store/actions/Common\";\r\nimport * as actionTypes from \"store/actions/ActionTypes\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst ProjectForm = ({ mime, handleSubmit, submitting, pristine, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const renderInput = ({ input, type, meta }) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          name={input.name}\r\n          type={type}\r\n          accept={mime}\r\n          onChange={(event) => handleChange(event, input)}\r\n        />\r\n        {meta && meta.invalid && meta.error && (\r\n          <p style={{ color: \"red\", fontSize: \"10px\" }}>{meta.error}</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  const handleChange = (event, input) => {\r\n    event.preventDefault();\r\n    let imageFile = event.target.files[0];\r\n    if (imageFile) {\r\n      const localImageUrl = URL.createObjectURL(imageFile);\r\n      const imageObject = new window.Image();\r\n\r\n      imageObject.onload = () => {\r\n        imageFile.width = imageObject.naturalWidth;\r\n        imageFile.height = imageObject.naturalHeight;\r\n        input.onChange(imageFile);\r\n        URL.revokeObjectURL(imageFile);\r\n      };\r\n      imageObject.src = localImageUrl;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (formValues) => {\r\n    let formData = new FormData();\r\n    formData.append(\"project_name\", formValues.project_name);\r\n    formData.append(\"project_endAt\", formValues.project_endAt);\r\n    formData.append(\"project_description\", formValues.project_description);\r\n    formData.append(\"project_cash_amount\", formValues.project_cash_amount);\r\n    formData.append(\"project_img\", formValues.project_img);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axiosInstance.post(\"project/create\", formData, config);\r\n      dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Project Created!\" });\r\n      dispatch(stopSubmit(\"projectForm\"));\r\n      dispatch(reset(\"projectForm\"));\r\n      dispatch(offLoading());\r\n    } catch (error) {\r\n      dispatch({ type: actionTypes.CREATE_PROJECT_FAIL });\r\n      dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: error.response.message });\r\n      dispatch(stopSubmit(\"projectForm\"));\r\n      dispatch(reset(\"projectForm\"));\r\n      dispatch(offLoading());\r\n    }\r\n  };\r\n\r\n  \r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const getSteps = () => {\r\n    return [\"Project Title\", \"Add a photo\", \"Description\"];\r\n  };\r\n\r\n  const steps = getSteps();\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return getPersonalInformation();\r\n      case 1:\r\n        return getItems();\r\n      case 2:\r\n        return getTrack();\r\n      default:\r\n        return \"Uknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  const getPersonalInformation = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">Project Title</h2>\r\n        <Field\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Title of the project?\"\r\n          component=\"input\"\r\n          name=\"project_name\"\r\n        />\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">Project Amount</h2>\r\n        <Field\r\n          type=\"number\"\r\n          className=\"input-text\"\r\n          placeholder=\"Project amount needed?\"\r\n          component=\"input\"\r\n          name=\"project_cash_amount\"\r\n        />\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const getTrack = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">\r\n          <i>Project description</i>\r\n        </h2>\r\n        <Field\r\n          type=\"text\"\r\n          className=\"input-textarea\"\r\n          name=\"project_description\"\r\n          component=\"textarea\"\r\n          placeholder=\"breifly describe the project\"\r\n        />\r\n        <h2 className=\"fs-title mt-4 text-uppercase font-weight-bold\">Project end date</h2>\r\n        <Field type=\"date\" name=\"project_endAt\" component=\"input\" className=\"input-date\" />\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const getItems = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">Add a cover photo</h2>\r\n        <h3 className=\"fs-subtitle font-weight-bold\">\r\n          Please upload a picture that describes your project\r\n        </h3>\r\n\r\n        <div>\r\n          <Field name=\"project_img\" type=\"file\" component={renderInput} className=\"input-file\" />\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex mt-5 justify-content-center\">\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"fundforms_container\">\r\n          <div>\r\n            <Stepper activeStep={activeStep} alternativeLabel className=\"horizontal-stepper-linear\">\r\n              {steps.map((label, index) => {\r\n                return (\r\n                  <Step\r\n                    key={label}\r\n                    className={`horizontal-stepper ${index === activeStep ? \"active\" : \"\"}`}\r\n                  >\r\n                    <StepLabel className=\"stepperlabel\">{label}</StepLabel>\r\n                  </Step>\r\n                );\r\n              })}\r\n            </Stepper>\r\n\r\n            <div>\r\n              {activeStep !== steps.length ? (\r\n                <div>\r\n                  {getStepContent(activeStep)}\r\n                  <div className=\"mt-4\">\r\n                    {activeStep !== 0 && (\r\n                      <Button\r\n                        disabled={activeStep === 0}\r\n                        onClick={handleBack}\r\n                        className=\"mr-2 float-left\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      className=\"mr-2 float-left\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.push(\"/\")}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      className=\"mr-2 float-right\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                    // disabled={true}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                  <>\r\n                    <Button\r\n                      disabled={activeStep === 0}\r\n                      onClick={handleBack}\r\n                      className=\"mr-2 float-left\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Back\r\n                  </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      className=\"MuiButton-containedPrimary\"\r\n                      disabled={pristine || submitting}\r\n                      onClick={() => {\r\n                        setTimeout(() => {\r\n                          handleReset();\r\n                        }, 7000);\r\n                      }}\r\n                    >\r\n                      Submit\r\n                  </Button>\r\n                  </>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(\r\n  reduxForm({\r\n    form: \"projectForm\",\r\n  })(ProjectForm)\r\n);"],"sourceRoot":""}