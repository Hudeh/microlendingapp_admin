{"version":3,"sources":["components/containers/dashboard/views/dashboard/contributions/WithdrawalForm.js"],"names":["numeral","require","ProjectForm","history","dispatch","useDispatch","auctionState","useSelector","state","commonReducer","balanceState","contributionReducer","mainAccount","bonusAccount","loading","useState","request_expected_date","request_reasons","request_amount","request_from_account","formValue","SetformValue","handleChange","event","value","target","name","prevalue","handleSubmit","a","setLoading","axiosInstance","post","type","actionTypes","payload","offLoading","Main","parseInt","bank_account_balance","Wallet","wallet_balance","activeStep","setActiveStep","steps","getPersonalInformation","className","placeholder","onChange","getDate","getAmount","format","handleBack","prevActiveStep","onSubmit","alternativeLabel","map","label","index","length","stepIndex","getStepContent","disabled","onClick","color","push","variant","setTimeout"],"mappings":"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","file":"static/js/7.514b7b81.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Field, reduxForm, stopSubmit, reset } from \"redux-form\";\r\nimport axiosInstance from \"util/api\";\r\nimport { setLoading, offLoading } from \"store/actions/Common\";\r\nimport * as actionTypes from \"store/actions/ActionTypes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"util/CircularProgress\";\r\nvar numeral = require(\"numeral\");\r\n\r\nconst ProjectForm = ({history}) => {\r\n  const dispatch = useDispatch();\r\n  const auctionState = useSelector((state) => state.commonReducer);\r\n  const balanceState = useSelector((state) => state.contributionReducer);\r\n  const {mainAccount,bonusAccount} = balanceState\r\n  const { loading } = auctionState;\r\n  const [formValue, SetformValue] = useState({\r\n    request_expected_date:\"\",\r\n    request_reasons:\"\",\r\n    request_amount:\"\",\r\n    request_from_account:\"\",\r\n  })\r\n  const handleChange = (event) => {\r\n    let value = event.target.value;\r\n    let name = event.target.name;\r\n  \r\n    SetformValue((prevalue) => {\r\n      return {\r\n        ...prevalue,   // Spread Operator               \r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n  const handleSubmit = async () => {\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axiosInstance.post(\"request/withdrawal\", {...formValue});\r\n      dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Request Submitted\" });\r\n      dispatch(offLoading());\r\n    } catch (error) {\r\n      dispatch({ type: actionTypes.CREATE_PROJECT_FAIL });\r\n      dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: \"Check all field\" });\r\n      dispatch(offLoading());\r\n    }\r\n  };\r\n\r\n  const Main = formValue.request_from_account === 'Main' && parseInt(formValue.request_amount) > parseInt(mainAccount[0].bank_account_balance)\r\n  const Wallet = formValue.request_from_account === 'Wallet' && parseInt(formValue.request_amount) > parseInt(bonusAccount[0].wallet_balance)\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const getSteps = () => {\r\n    return [\"Reason\", \"Amount\", \"Date\"];\r\n  };\r\n\r\n  const steps = getSteps();\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return getPersonalInformation();\r\n      case 1:\r\n        return getAmount();\r\n      case 2:\r\n        return getDate();\r\n      default:\r\n        return \"Uknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  const getPersonalInformation = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">Reason For Withdrawal</h2>\r\n        <input\r\n          type=\"textarea\"\r\n          className=\"input-textarea\"\r\n          name=\"request_reasons\"\r\n          placeholder=\"breif reasons for withdrawal\"\r\n            onChange={handleChange}\r\n        />\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const getDate = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title mt-4 text-uppercase font-weight-bold\">Request Expected Date</h2>\r\n        <input onChange={handleChange} type=\"date\" name=\"request_expected_date\" className=\"input-date\" />\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const getAmount = () => {\r\n    return (\r\n      <fieldset>\r\n        <select name=\"request_from_account\" className=\"input-textarea\"onChange={handleChange}>\r\n            <option>Select Account</option>\r\n            <option value=\"Main\">Main</option>\r\n            <option value=\"Wallet\">Wallet</option>\r\n          </select>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">Amount</h2>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"amount needed?\"\r\n          name=\"request_amount\"\r\n          onChange={handleChange}\r\n        />\r\n        {Main ?\r\n          <p className='text-danger'>amount can't be greater than balance: ₦{numeral(mainAccount[0].bank_account_balance).format(\"0,0\")}</p> :\r\n          Wallet ? <p className='text-danger'>amount can't be greater than balance: ₦{numeral(bonusAccount[0].wallet_balance).format(\"0,0\")}</p>:null}\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex mt-5 justify-content-center\">\r\n        <form onSubmit={handleSubmit} className=\"fundforms_container\">\r\n          <div>\r\n            <Stepper activeStep={activeStep} alternativeLabel className=\"horizontal-stepper-linear\">\r\n              {steps.map((label, index) => {\r\n                return (\r\n                  <Step\r\n                    key={label}\r\n                    className={`horizontal-stepper ${index === activeStep ? \"active\" : \"\"}`}\r\n                  >\r\n                    <StepLabel className=\"stepperlabel\">{label}</StepLabel>\r\n                  </Step>\r\n                );\r\n              })}\r\n            </Stepper>\r\n\r\n            <div>\r\n              {activeStep !== steps.length ? (\r\n                <div>\r\n                  {getStepContent(activeStep)}\r\n                  <div className=\"mt-4\">\r\n                    {activeStep !== 0 && (\r\n                      <Button\r\n                        disabled={activeStep === 0}\r\n                        onClick={handleBack}\r\n                        className=\"mr-2 float-left\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      className=\"mr-2 float-left\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.push(\"/\")}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      className=\"mr-2 float-right\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      disabled={parseInt(formValue.request_amount) > parseInt(mainAccount[0].bank_account_balance)\r\n                      || parseInt(formValue.request_amount) > parseInt(bonusAccount[0].wallet_balance)\r\n                      }\r\n                    >\r\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                  <>\r\n                    <Button\r\n                      disabled={activeStep === 0}\r\n                      onClick={handleBack}\r\n                      className=\"mr-2 float-left\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Back\r\n                  </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      className=\"MuiButton-containedPrimary\"\r\n                      disabled={formValue.request_amount === '' || formValue.request_expected_date=== '' ||\r\n                    formValue.request_from_account === '' ||formValue.request_reasons === '' }\r\n                      onClick={() => {\r\n                        setTimeout(() => {\r\n                          handleReset();\r\n                        }, 5000);\r\n                      }}\r\n                    >\r\n                      {loading ? <CircularProgress/>: \"Submit\"}\r\n                  </Button>\r\n                  </>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectForm\r\n;"],"sourceRoot":""}