{"version":3,"sources":["components/containers/dashboard/views/dashboard/auction/CreateAuctionForm.js"],"names":["withRouter","reduxForm","form","mime","handleSubmit","submitting","pristine","history","dispatch","useDispatch","useState","setSelectState","auctionPublic","setAuctionPublic","ToggleSwitch","checked","onChange","id","className","type","e","target","renderInput","input","meta","name","accept","event","handleChange","invalid","error","style","color","fontSize","handleInputChange","value","preventDefault","imageFile","files","localImageUrl","URL","createObjectURL","imageObject","window","Image","onload","width","naturalWidth","height","naturalHeight","revokeObjectURL","src","onSubmit","formValues","a","formData","FormData","append","auction_item_name","auction_item_img","auction_item_category","auction_item_condition","auction_endAt","auction_type","config","headers","Authorization","localStorage","getItem","Accept","setLoading","axiosInstance","post","actionTypes","payload","stopSubmit","reset","offLoading","response","message","activeStep","setActiveStep","steps","getPersonalInformation","placeholder","component","getDescription","getItems","handleBack","prevActiveStep","alternativeLabel","map","label","index","length","stepIndex","getStepContent","disabled","onClick","push","variant","setTimeout"],"mappings":"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","file":"static/js/4.75132b01.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Field, reduxForm, stopSubmit, reset } from \"redux-form\";\r\nimport axiosInstance from \"util/api\";\r\nimport { setLoading, offLoading } from \"store/actions/Common\";\r\nimport * as actionTypes from \"store/actions/ActionTypes\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst AuctionForm = ({ mime, handleSubmit, submitting, pristine, history }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectState, setSelectState] = useState(\"\")\r\n  const [auctionPublic, setAuctionPublic] = useState(false);\r\n  const ToggleSwitch = ({ checked, onChange, id }) => (\r\n    <div className=\"form-group focused\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={checked}\r\n        onChange={(e) => onChange(e.target.checked)}\r\n        id={id}\r\n      />\r\n    </div>\r\n  );\r\n  const renderInput = ({ input, type, meta }) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          name={input.name}\r\n          type={type}\r\n          accept={mime}\r\n          onChange={(event) => handleChange(event, input)}\r\n        />\r\n        {meta && meta.invalid && meta.error && (\r\n          <p style={{ color: \"red\", fontSize: \"12px\" }}>{meta.error}</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setSelectState({[e.target.name]: e.target.value})\r\n  }\r\n  \r\n  const handleChange = (event, input) => {\r\n    event.preventDefault();\r\n    let imageFile = event.target.files[0];\r\n    if (imageFile) {\r\n      const localImageUrl = URL.createObjectURL(imageFile);\r\n      const imageObject = new window.Image();\r\n      imageObject.onload = () => {\r\n        imageFile.width = imageObject.naturalWidth;\r\n        imageFile.height = imageObject.naturalHeight;\r\n        input.onChange(imageFile);\r\n        URL.revokeObjectURL(imageFile);\r\n      };\r\n      imageObject.src = localImageUrl;\r\n    }\r\n  };\r\n\r\n\r\n  const onSubmit = async (formValues) => {\r\n    let formData = new FormData();\r\n    formData.append(\"auction_item_name\", formValues.auction_item_name);\r\n    formData.append(\"auction_item_img\", formValues.auction_item_img);\r\n    formData.append(\"auction_item_category\", formValues.auction_item_category);\r\n    formData.append(\"auction_item_condition\", formValues.auction_item_condition);\r\n    formData.append(\"auction_endAt\", formValues.auction_endAt);\r\n    formData.append(\"auction_type\", formValues.auction_type);\r\n    formData.append(\"auction_is_public\", auctionPublic);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axiosInstance.post(\"auction/create\", formData, config);\r\n      dispatch({ type: actionTypes.SHOW_SUCCESS_MESSAGE, payload: \"Auction Created!\" });\r\n      dispatch(stopSubmit(\"AuctionForm\"));\r\n      dispatch(reset(\"AuctionForm\"));\r\n      dispatch(offLoading());\r\n\r\n    } catch (error) {\r\n      dispatch({ type: actionTypes.CREATE_AUCTION_FAIL });\r\n      dispatch({ type: actionTypes.SHOW_ERROR_MESSAGE, payload: error.response.message });\r\n      dispatch(stopSubmit(\"AuctionForm\"));\r\n      dispatch(reset(\"AuctionForm\"));\r\n      dispatch(offLoading());\r\n    }\r\n  };\r\n\r\n  \r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const getSteps = () => {\r\n    return [\"Auction Title\", \"Add a photo\", \"Auction Timeline\"];\r\n  };\r\n\r\n  const steps = getSteps();\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return getPersonalInformation();\r\n      case 1:\r\n        return getItems();\r\n      case 2:\r\n        return getDescription();\r\n      default:\r\n        return \"Uknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  const getPersonalInformation = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">Auction Name</h2>\r\n        <Field\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Title of the project?\"\r\n          component=\"input\"\r\n          name=\"auction_item_name\"\r\n        />\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const getDescription = () => {\r\n    return (\r\n      <fieldset>\r\n        {/* auction category and condition */}\r\n        <div className=\"d-flex flex-wrap mt-3 mb-3 justify-content-between\">\r\n          <div className=\"d-flex flex-column mt-3 mb-3\">\r\n            <h2 className=\"fs-title text-uppercase font-weight-bold\">\r\n              <i>Auction category</i>\r\n            </h2>\r\n            <Field\r\n              component=\"select\"\r\n              onChange={handleInputChange}\r\n              name=\"auction_item_category\"\r\n            >\r\n              <option value=\"select_category\">select category</option>\r\n              <option value=\"Health & Beauty\">Health & Beauty</option>\r\n              <option value=\"Home & Office\">Home & Office</option>\r\n              <option value=\"Phones & Tablets\">Phones & Tablets</option>\r\n              <option value=\"Computing\">Computing</option>\r\n              <option value=\"Electronics\">Electronics</option>\r\n              <option value=\"Fashion\">Fashion</option>\r\n              <option value=\"Baby Products\">Baby Products</option>\r\n              <option value=\"Gaming\">Gaming</option>\r\n              <option value=\"Automobile\">Automobile</option>\r\n              <option value=\"Other categories\">Other categories</option>\r\n            </Field>\r\n          </div>\r\n          <div className=\"d-flex flex-column mt-3 mb-3\">\r\n            <h2 className=\"fs-title text-uppercase font-weight-bold\">\r\n              <i>Auction Type</i>\r\n            </h2>\r\n            <Field\r\n              component=\"select\"\r\n              onChange={handleInputChange}\r\n              name=\"auction_type\"\r\n            >\r\n              <option value=\"select_category\">select type</option>\r\n              <option value=\"Open\">Open</option>\r\n              <option value=\"Closed\">Closed</option>\r\n            </Field>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"d-flex flex-wrap mt-3 mb-3 justify-content-between\">\r\n          <div className=\"d-flex flex-column mt-3 mb-3\">\r\n            <h2 className=\"fs-title mr-2 text-uppercase font-weight-bold \">\r\n              auction Condition\r\n            </h2>\r\n            <Field\r\n              component=\"select\"\r\n              onChange={handleInputChange}\r\n              name=\"auction_item_condition\"\r\n             >\r\n              <option value=\"select_condition\">select condition</option>\r\n              <option value=\"New\">New</option>\r\n              <option value=\"Good\">Good</option>\r\n              <option value=\"Very Good\">Very Good</option>\r\n              <option value=\"Acceptable\">Acceptable</option>\r\n              <option value=\"Bad\">Bad</option>\r\n              <option value=\"Fairly Used\">Fairly used</option>\r\n            </Field>\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-column mt-3 mb-3\">\r\n            <h2 className=\"fs-title mr-2 text-uppercase font-weight-bold \">\r\n              Is auction Public ?\r\n            </h2>\r\n            <ToggleSwitch checked={auctionPublic} id=\"staffform\" onChange={setAuctionPublic} />\r\n          </div>\r\n        </div>\r\n\r\n        <h2 className=\"fs-title mt-4 text-uppercase font-weight-bold\">\r\n          Auction end date\r\n        </h2>\r\n        <Field\r\n          type=\"date\"\r\n          name=\"auction_endAt\"\r\n          component=\"input\"\r\n          className=\"input-date\"\r\n        />\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const getItems = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">\r\n          Add a cover photo\r\n        </h2>\r\n        <h3 className=\"fs-subtitle font-weight-bold\">\r\n          Please upload a picture that describes your project\r\n        </h3>\r\n\r\n        <div>\r\n          <Field\r\n            name=\"auction_item_img\"\r\n            type=\"file\"\r\n            component={renderInput}\r\n            className=\"input-file\"\r\n          />\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex mt-5 justify-content-center\">\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"fundforms_container\">\r\n          <div>\r\n            <Stepper activeStep={activeStep} alternativeLabel className=\"horizontal-stepper-linear\">\r\n              {steps.map((label, index) => {\r\n                return (\r\n                  <Step\r\n                    key={label}\r\n                    className={`horizontal-stepper ${index === activeStep ? \"active\" : \"\"}`}\r\n                  >\r\n                    <StepLabel className=\"stepperlabel\">{label}</StepLabel>\r\n                  </Step>\r\n                );\r\n              })}\r\n            </Stepper>\r\n\r\n            <div>\r\n              {activeStep !== steps.length ? (\r\n                <div>\r\n                  {getStepContent(activeStep)}\r\n                  <div className=\"mt-4\">\r\n                    {activeStep !== 0 && (\r\n                      <Button\r\n                        disabled={activeStep === 0}\r\n                        onClick={handleBack}\r\n                        className=\"mr-2 float-left\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      className=\"mr-2 float-left\"\r\n                      color=\"primary\"\r\n                      onClick={() => history.push(\"/\")}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      className=\"mr-2 float-right\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                    // disabled={true}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                  <>\r\n                    <Button\r\n                      disabled={activeStep === 0}\r\n                      onClick={handleBack}\r\n                      className=\"mr-2 float-left\"\r\n                      color=\"primary\"\r\n                      >\r\n                      Back\r\n                  </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      className=\"MuiButton-containedPrimary\"\r\n                      disabled={pristine || submitting}\r\n                      onClick={() => {\r\n                        setTimeout(() => {\r\n                          handleReset();\r\n                        }, 7000);\r\n                      }}\r\n                    >\r\n                      Submit\r\n                  </Button>\r\n                  </>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(\r\n  reduxForm({\r\n    form: \"AuctionForm\",\r\n  })(AuctionForm)\r\n);"],"sourceRoot":""}